// Task 1
// Створіть set s1. Додайте до нього три елементи 'h', 'b', 'o', 'h'. Додавання через add. Виведіть у консоль
// набір (set) s1, що вийшов.
// let s1 = new ...


// Task 2
//При натисканні b-2 виконуєте функцію f2. Функція повинна додати до набору s2 елементи, які користувач вводить до i-2. Функція повинна виводити y консоль s2 після кожного додавання елемента. 


// let s2 =

const f2 = () => { }

document.querySelector('.b-2').onclick = f2;


// Task 3
// При натисканні на b-3 виконуєте функцію f3. Функція повинна видалити з набору s3 рядок, який користувач вводить до i-3.
// Функція повинна виводити y консоль s3 після кожного видалення елемента.

let s3 = new Set(['one', 'two', 'four']); // обратите внимание, как просто можно добавить массив в набор!

const f3 = () => { }

document.querySelector('.b-3').onclick = f3;


// Task 4
// При натисканні b-4 виконуєте функцію f4. Функція повинна перевірити наявність у наборі s4 рядка введеного користувачем i-4. Якщо рядок є - вивести в out-4 true. Якщо ні – false.

let s4 = new Set(['a', 'b', 'c', 'z']);

const f4 = () => { }

document.querySelector('.b-4').onclick = f4;

// Task 5
// При натисканні на b-5 виконуєте функцію f5. Функція повинна вивести в out-5 кількість елементів набору s5. 


let s5 = new Set(['a', 'b', 'c', 'z', 'a2', 'b2', 'c2', 'z2']);

const f5 = () => { }

document.querySelector('.b-5').onclick = f5;

// Task 6
// При натисканні b-6 виконуєте функцію f6. Функція повинна вивести у out-6 число унікальних елементів у масиві a6. Розв'язок
// має використовувати set.

let a6 = [1, 2, 3, 4, 5, 3, 4, 5, 2, 4, 5, 3, 24, 5, 2, 4, 56, 4, 3, 2, 335, 2, 23, 41, 3, 4, 1, 1, 4, 2, 2, 4, 5, 24, 5, 3, 22, 56];

const f6 = () => { }

document.querySelector('.b-6').onclick = f6;

// Task 7
// Під час натискання b-7 виконуєте функцію f7. Функція повинна отримувати з i-7 значення пароля і перевіряти, щоб користувач у рядку пароля використовував символи, що не повторюються. Якщо символи унікальні, а довжина пароля більша ( строго) 6 то виводьте в out-7 число 1. Якщо є символи, що повторюються, або довжина менше або дорівнює 6 - то виводьте 0. Для перевірки унікальності символів використовуйте Set.

const f7 = () => { }

document.querySelector('.b-7').onclick = f7;

// Task 8
// Під час натискання b-8 виконуєте функцію f8. Функція повинна перебрати набір s8 і додати масив ar8 тільки числа більше 5. Виведіть масив в консоль.

let s8 = new Set([1, 2, 3, 4, 5, 3, 4, 7, 9, 5, 7, 8, 9, 23, 45, 5, 2, 4, 5, 3, 24, 5, 2, 4, 56, 4, 3, 2, 335, 2, 23, 41, 3, 4, 1, 1, 4, 2, 2, 4, 5, 24, 5, 3, 22, 56]);
let ar8 = [];

const f8 = () => { }

document.querySelector('.b-8').onclick = f8;

// Task 9
//  При натисканні b-9 виконуєте функцію f9. Функція повинна приймати набір our_set як параметр, перетворювати його на рядок, причому після кожного символу рядка має бути пробіл. Функція повинна повертати результуючий рядок.
// У нашому прикладі результат повинен бути 9 8 7 6 5 брати набір s8 і додати масив ar8 тільки числа більше 5. Виведіть масив в консоль.

const f9 = our_set => { }

document.querySelector('.b-9').onclick = () => {
    let s9 = new Set([9, 8, 7, 6, 5]);
    document.querySelector('.out-9').innerHTML = f9(s9);
}

// Task 10
// При натисканні на b-10 виконуєте функцію f10. Функція повинна приймати набір set як параметр і виводити його в
// вказаний елемент. Елемент вказується як другий параметр функції f10. Виведення значень – через пробіл.

const f10 = (out_set, elem) => { }

document.querySelector('.b-10').onclick = () => {
    let a10 = new Set(['4', '5', '6']);
    f10(a10, '.out-10');
};


// Task 11
// Розгляньте функцію f11 та її роботу. Розберіться чому два масиви додані в Set.
// Так, це завдання вирішено! Просто розберіться.

const f11 = () => {
    let s = new Set();
    s.add([1]);
    s.add([1]);
    console.log(s);
}

document.querySelector('.b-11').onclick = f11;

// Task 12
//   При натисканні b-12 виконуєте функцію f12. Функція повинна перетворити рядок str12 на масив, так що кожна буква -
// окремий елемент масиву. Потім створити набір на основі масиву та повернути його.

let str12 = 'The name conjures up visions of plum pudding and Christmas punch quaint coaching inns and cozy firesides but also of orphaned and starving children';

const f12 = () => {

}

document.querySelector('.b-12').onclick = () => {
    console.log(f12());
}

// Task 13
// При натисканні b-13 виконуєте функцію f13. Функція повинна вважати, скільки кожен символ входить у рядок. Результат у вигляді об'єкта (ключи – символи, значення – скільки символ зустрічається у рядку) повернути.
// Приклад результату для рядка 'Hello'
// повинен повернути об'єкт типу (зовнішній вигляд та оформлення
// може відрізнятися у різних консолях)
// { H : 1, e : 1, l : 2, o : 1 }:

let str13 = 'abbat pro';


const f13 = () => {

    // return
}

document.querySelector('.b-13').onclick = () => {
    console.log(f13());
}
